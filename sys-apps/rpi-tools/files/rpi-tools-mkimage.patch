diff --git a/mkimage/imagetool-uncompressed.py b/mkimage/imagetool-uncompressed.py
index 46ff4fc..8d332b3 100755
--- a/mkimage/imagetool-uncompressed.py
+++ b/mkimage/imagetool-uncompressed.py
@@ -9,8 +9,13 @@ try:
 except:
    kernel_image = ""
 
-if kernel_image == "":
-  print("usage : imagetool-uncompressed.py <kernel image>");
+try:
+   output = sys.argv[2]
+except:
+   output = ""
+
+if kernel_image == "" or output == "":
+  print("usage : imagetool-uncompressed.py <kernel image> <output>");
   sys.exit(0)
    
 re_line = re.compile(r"0x(?P<value>[0-9a-f]{8})")
@@ -32,14 +37,19 @@ def load_to_mem(name, addr):
 
    f.close()
 
-load_to_mem("boot-uncompressed.txt", 0x00000000)
-load_to_mem("args-uncompressed.txt", 0x00000100)
+script_dir             = os.path.dirname(os.path.realpath(__file__))
+boot_uncompressed_path = os.path.join(script_dir, "boot-uncompressed.txt")
+args_uncompressed_path = os.path.join(script_dir, "args-uncompressed.txt")
+first32k_path          = os.path.join(script_dir, "first32k.bin")
+
+load_to_mem(boot_uncompressed_path, 0x00000000)
+load_to_mem(args_uncompressed_path, 0x00000100)
 
-f = open("first32k.bin", "wb")
+f = open(first32k_path, "wb")
 
 for m in mem:
    f.write(chr(m))
 
 f.close()
 
-os.system("cat first32k.bin " + kernel_image + " > kernel.img")
+os.system("cat " + first32k_path + " " + kernel_image + " > " + output)
